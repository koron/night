# Night - file filter (grep, head & tail) - server.

## USAGE

Start **night** on a server.

    $ node night.js

Then access by HTTP from client.

    $ curl http://127.0.0.1:8080/files/var/log/messages?tail

You will get last 10 lines of /var/log/messages on a server.

## URL

### File

To obtain file content.

    http://{host}:8080/files{/path/to/file}[?{filters}]

`filters` is optional.

Where `{filters}` is:

    {filter}[&{filter}...]

Where `{filter}` is:

    {filter_name}[={options}]

Where `{options}` is:

    {option_name}:{value}[;{option_name}:{value}...]

See other section for detail of each filters.

Example: get last 50 lines except empty lines.

    http://127.0.0.1:8080/files/var/log/messages?grep=re:^$;match:false&tail=limit:50

### Directory.

To obtain entry list in the directory.

    http://{host}:8080/files{/path/to/dir}[?{filters}]

You will get lines in this format:

    {filename}\t{type}\t{size}\t{time}

Where `\t` is TAB character, so you can choose by cut filter easily.

* filename - Name of entry.
* type - Type of entry: `file`, `dir`, `error` or `unknown`.
* size - Size of entry, or 0 when type is `error`.
* time - Timestamp of entry in UTC format, or error detail when type is `error`.

Example: get name and size entries in /var/log.

    http://127.0.0.1:8080/files/var/log?cut=list:1,3

## Filters

Currenly support these filters:

* Grep filter
* Head filter
* Tail filter
* Cut filters

### Grep filter

Output lines which matches against regular expression.

`grep` command equivalent.

* filter\_name: `grep`
* options
  * `re` - regular expression used for match.
  * `match` - output when match or not match.  default is true.

### Head filter

Output the first N lines.

`head` command equivalent.

* filter\_name: `head`
* options
  * `start` - start line number for output.  begging 0.  default is 0.
  * `limit` - line number for output.  defualt is 10.

### Tail filter

Output the last N lines.

`tail` command equivalent.

* filter\_name: `tail`
* options
  * `limit` - line number for output.  defualt is 10.

### Cut filter

Output selected fields of lines.

`cut` command equivalent.

* filter\_name: `cut`
* options:
  * `delim` - field delimiter string (default: TAB character).
  * `list` - selected fields, combinable by comma `,`.
    * `N` - N'th field counted from 1.
    * `N-M` - from N'th, to M'th field (included).
    * `N-` - from N'th field, to end of line.
    * `N-` - from first, to N'th field.


## TODO

* (簡単な)認証を付ける
* アクセスできるファイルに制限をかける
* domainを使ってエラー耐性を高める
* daemonの作法に従う
* cluster化
* packageとしての体裁を整える
* Implement new filters.
* Implement UI pages.
* このリストをを英語化する ;)
